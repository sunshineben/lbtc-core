// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lbtc.proto

#include "lbtc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace LbtcPbMsg {
class MsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Msg> _instance;
} _Msg_default_instance_;
class CreateTokenMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTokenMsg> _instance;
} _CreateTokenMsg_default_instance_;
class TransferTokenMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferTokenMsg> _instance;
} _TransferTokenMsg_default_instance_;
class LockTokenMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockTokenMsg> _instance;
} _LockTokenMsg_default_instance_;
class RegisteNameMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisteNameMsg> _instance;
} _RegisteNameMsg_default_instance_;
}  // namespace LbtcPbMsg
static void InitDefaultsMsg_lbtc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LbtcPbMsg::_Msg_default_instance_;
    new (ptr) ::LbtcPbMsg::Msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LbtcPbMsg::Msg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Msg_lbtc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsg_lbtc_2eproto}, {}};

static void InitDefaultsCreateTokenMsg_lbtc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LbtcPbMsg::_CreateTokenMsg_default_instance_;
    new (ptr) ::LbtcPbMsg::CreateTokenMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LbtcPbMsg::CreateTokenMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateTokenMsg_lbtc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateTokenMsg_lbtc_2eproto}, {}};

static void InitDefaultsTransferTokenMsg_lbtc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LbtcPbMsg::_TransferTokenMsg_default_instance_;
    new (ptr) ::LbtcPbMsg::TransferTokenMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LbtcPbMsg::TransferTokenMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferTokenMsg_lbtc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferTokenMsg_lbtc_2eproto}, {}};

static void InitDefaultsLockTokenMsg_lbtc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LbtcPbMsg::_LockTokenMsg_default_instance_;
    new (ptr) ::LbtcPbMsg::LockTokenMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LbtcPbMsg::LockTokenMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockTokenMsg_lbtc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockTokenMsg_lbtc_2eproto}, {}};

static void InitDefaultsRegisteNameMsg_lbtc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LbtcPbMsg::_RegisteNameMsg_default_instance_;
    new (ptr) ::LbtcPbMsg::RegisteNameMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LbtcPbMsg::RegisteNameMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisteNameMsg_lbtc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisteNameMsg_lbtc_2eproto}, {}};

void InitDefaults_lbtc_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Msg_lbtc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTokenMsg_lbtc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferTokenMsg_lbtc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockTokenMsg_lbtc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisteNameMsg_lbtc_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_lbtc_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_lbtc_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_lbtc_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_lbtc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::Msg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::Msg, opid_),
  0,
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, opid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, tokenaddress_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, name_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, symbol_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, totalamount_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::CreateTokenMsg, digits_),
  3,
  0,
  1,
  2,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, opid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, dstaddress_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, tokenid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, amount_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::TransferTokenMsg, comment_),
  2,
  0,
  3,
  4,
  1,
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, opid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, dstaddress_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, tokenid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, amount_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, comment_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::LockTokenMsg, expiryheight_),
  2,
  0,
  3,
  4,
  1,
  5,
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::RegisteNameMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::RegisteNameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::RegisteNameMsg, opid_),
  PROTOBUF_FIELD_OFFSET(::LbtcPbMsg::RegisteNameMsg, name_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::LbtcPbMsg::Msg)},
  { 7, 18, sizeof(::LbtcPbMsg::CreateTokenMsg)},
  { 24, 34, sizeof(::LbtcPbMsg::TransferTokenMsg)},
  { 39, 50, sizeof(::LbtcPbMsg::LockTokenMsg)},
  { 56, 63, sizeof(::LbtcPbMsg::RegisteNameMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LbtcPbMsg::_Msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LbtcPbMsg::_CreateTokenMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LbtcPbMsg::_TransferTokenMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LbtcPbMsg::_LockTokenMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LbtcPbMsg::_RegisteNameMsg_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_lbtc_2eproto = {
  {}, AddDescriptors_lbtc_2eproto, "lbtc.proto", schemas,
  file_default_instances, TableStruct_lbtc_2eproto::offsets,
  file_level_metadata_lbtc_2eproto, 5, file_level_enum_descriptors_lbtc_2eproto, file_level_service_descriptors_lbtc_2eproto,
};

const char descriptor_table_protodef_lbtc_2eproto[] =
  "\n\nlbtc.proto\022\tLbtcPbMsg\"\023\n\003Msg\022\014\n\004opid\030\001"
  " \002(\r\"w\n\016CreateTokenMsg\022\014\n\004opid\030\001 \002(\r\022\024\n\014"
  "tokenaddress\030\002 \002(\t\022\014\n\004name\030\003 \002(\t\022\016\n\006symb"
  "ol\030\004 \002(\t\022\023\n\013totalamount\030\005 \002(\004\022\016\n\006digits\030"
  "\006 \002(\r\"f\n\020TransferTokenMsg\022\014\n\004opid\030\001 \002(\r\022"
  "\022\n\ndstaddress\030\002 \002(\t\022\017\n\007tokenid\030\003 \002(\r\022\016\n\006"
  "amount\030\004 \002(\004\022\017\n\007comment\030\005 \001(\t\"x\n\014LockTok"
  "enMsg\022\014\n\004opid\030\001 \002(\r\022\022\n\ndstaddress\030\002 \002(\t\022"
  "\017\n\007tokenid\030\003 \002(\r\022\016\n\006amount\030\004 \002(\004\022\017\n\007comm"
  "ent\030\005 \001(\t\022\024\n\014expiryheight\030\006 \002(\004\",\n\016Regis"
  "teNameMsg\022\014\n\004opid\030\001 \002(\r\022\014\n\004name\030\002 \002(\t"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_lbtc_2eproto = {
  false, InitDefaults_lbtc_2eproto, 
  descriptor_table_protodef_lbtc_2eproto,
  "lbtc.proto", &assign_descriptors_table_lbtc_2eproto, 437,
};

void AddDescriptors_lbtc_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_lbtc_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lbtc_2eproto = []() { AddDescriptors_lbtc_2eproto(); return true; }();
namespace LbtcPbMsg {

// ===================================================================

void Msg::InitAsDefaultInstance() {
}
class Msg::HasBitSetters {
 public:
  static void set_has_opid(Msg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg::kOpidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg::Msg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LbtcPbMsg.Msg)
}
Msg::Msg(const Msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  opid_ = from.opid_;
  // @@protoc_insertion_point(copy_constructor:LbtcPbMsg.Msg)
}

void Msg::SharedCtor() {
  opid_ = 0u;
}

Msg::~Msg() {
  // @@protoc_insertion_point(destructor:LbtcPbMsg.Msg)
  SharedDtor();
}

void Msg::SharedDtor() {
}

void Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg& Msg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Msg_lbtc_2eproto.base);
  return *internal_default_instance();
}


void Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:LbtcPbMsg.Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Msg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Msg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_opid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LbtcPbMsg.Msg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_opid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LbtcPbMsg.Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LbtcPbMsg.Msg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LbtcPbMsg.Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LbtcPbMsg.Msg)
}

::google::protobuf::uint8* Msg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LbtcPbMsg.Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LbtcPbMsg.Msg)
  return target;
}

size_t Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LbtcPbMsg.Msg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 opid = 1;
  if (has_opid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LbtcPbMsg.Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg* source =
      ::google::protobuf::DynamicCastToGenerated<Msg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LbtcPbMsg.Msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LbtcPbMsg.Msg)
    MergeFrom(*source);
  }
}

void Msg::MergeFrom(const Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LbtcPbMsg.Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_opid()) {
    set_opid(from.opid());
  }
}

void Msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LbtcPbMsg.Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg::CopyFrom(const Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LbtcPbMsg.Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Msg::Swap(Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg::InternalSwap(Msg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(opid_, other->opid_);
}

::google::protobuf::Metadata Msg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lbtc_2eproto);
  return ::file_level_metadata_lbtc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateTokenMsg::InitAsDefaultInstance() {
}
class CreateTokenMsg::HasBitSetters {
 public:
  static void set_has_opid(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_tokenaddress(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_name(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_symbol(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_totalamount(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_digits(CreateTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTokenMsg::kOpidFieldNumber;
const int CreateTokenMsg::kTokenaddressFieldNumber;
const int CreateTokenMsg::kNameFieldNumber;
const int CreateTokenMsg::kSymbolFieldNumber;
const int CreateTokenMsg::kTotalamountFieldNumber;
const int CreateTokenMsg::kDigitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTokenMsg::CreateTokenMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LbtcPbMsg.CreateTokenMsg)
}
CreateTokenMsg::CreateTokenMsg(const CreateTokenMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tokenaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tokenaddress()) {
    tokenaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenaddress_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&opid_, &from.opid_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalamount_) -
    reinterpret_cast<char*>(&opid_)) + sizeof(totalamount_));
  // @@protoc_insertion_point(copy_constructor:LbtcPbMsg.CreateTokenMsg)
}

void CreateTokenMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateTokenMsg_lbtc_2eproto.base);
  tokenaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalamount_) -
      reinterpret_cast<char*>(&opid_)) + sizeof(totalamount_));
}

CreateTokenMsg::~CreateTokenMsg() {
  // @@protoc_insertion_point(destructor:LbtcPbMsg.CreateTokenMsg)
  SharedDtor();
}

void CreateTokenMsg::SharedDtor() {
  tokenaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTokenMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTokenMsg& CreateTokenMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateTokenMsg_lbtc_2eproto.base);
  return *internal_default_instance();
}


void CreateTokenMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:LbtcPbMsg.CreateTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      tokenaddress_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      symbol_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&opid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&totalamount_) -
        reinterpret_cast<char*>(&opid_)) + sizeof(totalamount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateTokenMsg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateTokenMsg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_opid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string tokenaddress = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.CreateTokenMsg.tokenaddress");
        object = msg->mutable_tokenaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.CreateTokenMsg.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string symbol = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.CreateTokenMsg.symbol");
        object = msg->mutable_symbol();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint64 totalamount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_totalamount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 digits = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_digits(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateTokenMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LbtcPbMsg.CreateTokenMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_opid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string tokenaddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tokenaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tokenaddress().data(), static_cast<int>(this->tokenaddress().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.CreateTokenMsg.tokenaddress");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.CreateTokenMsg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string symbol = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.CreateTokenMsg.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 totalamount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_totalamount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 digits = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_digits(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &digits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LbtcPbMsg.CreateTokenMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LbtcPbMsg.CreateTokenMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateTokenMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LbtcPbMsg.CreateTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opid(), output);
  }

  // required string tokenaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tokenaddress().data(), static_cast<int>(this->tokenaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.tokenaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tokenaddress(), output);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // required string symbol = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->symbol(), output);
  }

  // required uint64 totalamount = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->totalamount(), output);
  }

  // required uint32 digits = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->digits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LbtcPbMsg.CreateTokenMsg)
}

::google::protobuf::uint8* CreateTokenMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LbtcPbMsg.CreateTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opid(), target);
  }

  // required string tokenaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tokenaddress().data(), static_cast<int>(this->tokenaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.tokenaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tokenaddress(), target);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string symbol = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.CreateTokenMsg.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->symbol(), target);
  }

  // required uint64 totalamount = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->totalamount(), target);
  }

  // required uint32 digits = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->digits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LbtcPbMsg.CreateTokenMsg)
  return target;
}

size_t CreateTokenMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LbtcPbMsg.CreateTokenMsg)
  size_t total_size = 0;

  if (has_tokenaddress()) {
    // required string tokenaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokenaddress());
  }

  if (has_name()) {
    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_symbol()) {
    // required string symbol = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  if (has_opid()) {
    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());
  }

  if (has_digits()) {
    // required uint32 digits = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->digits());
  }

  if (has_totalamount()) {
    // required uint64 totalamount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalamount());
  }

  return total_size;
}
size_t CreateTokenMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LbtcPbMsg.CreateTokenMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string tokenaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokenaddress());

    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string symbol = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());

    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());

    // required uint32 digits = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->digits());

    // required uint64 totalamount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalamount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTokenMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LbtcPbMsg.CreateTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTokenMsg* source =
      ::google::protobuf::DynamicCastToGenerated<CreateTokenMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LbtcPbMsg.CreateTokenMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LbtcPbMsg.CreateTokenMsg)
    MergeFrom(*source);
  }
}

void CreateTokenMsg::MergeFrom(const CreateTokenMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LbtcPbMsg.CreateTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tokenaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenaddress_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000008u) {
      opid_ = from.opid_;
    }
    if (cached_has_bits & 0x00000010u) {
      digits_ = from.digits_;
    }
    if (cached_has_bits & 0x00000020u) {
      totalamount_ = from.totalamount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateTokenMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LbtcPbMsg.CreateTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTokenMsg::CopyFrom(const CreateTokenMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LbtcPbMsg.CreateTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTokenMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void CreateTokenMsg::Swap(CreateTokenMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTokenMsg::InternalSwap(CreateTokenMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tokenaddress_.Swap(&other->tokenaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(opid_, other->opid_);
  swap(digits_, other->digits_);
  swap(totalamount_, other->totalamount_);
}

::google::protobuf::Metadata CreateTokenMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lbtc_2eproto);
  return ::file_level_metadata_lbtc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransferTokenMsg::InitAsDefaultInstance() {
}
class TransferTokenMsg::HasBitSetters {
 public:
  static void set_has_opid(TransferTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_dstaddress(TransferTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tokenid(TransferTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_amount(TransferTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_comment(TransferTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferTokenMsg::kOpidFieldNumber;
const int TransferTokenMsg::kDstaddressFieldNumber;
const int TransferTokenMsg::kTokenidFieldNumber;
const int TransferTokenMsg::kAmountFieldNumber;
const int TransferTokenMsg::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferTokenMsg::TransferTokenMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LbtcPbMsg.TransferTokenMsg)
}
TransferTokenMsg::TransferTokenMsg(const TransferTokenMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dstaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dstaddress()) {
    dstaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstaddress_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&opid_, &from.opid_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&opid_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:LbtcPbMsg.TransferTokenMsg)
}

void TransferTokenMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransferTokenMsg_lbtc_2eproto.base);
  dstaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&opid_)) + sizeof(amount_));
}

TransferTokenMsg::~TransferTokenMsg() {
  // @@protoc_insertion_point(destructor:LbtcPbMsg.TransferTokenMsg)
  SharedDtor();
}

void TransferTokenMsg::SharedDtor() {
  dstaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferTokenMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferTokenMsg& TransferTokenMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransferTokenMsg_lbtc_2eproto.base);
  return *internal_default_instance();
}


void TransferTokenMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:LbtcPbMsg.TransferTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      dstaddress_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&opid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&opid_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransferTokenMsg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransferTokenMsg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_opid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string dstaddress = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.TransferTokenMsg.dstaddress");
        object = msg->mutable_dstaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 tokenid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_tokenid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint64 amount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string comment = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.TransferTokenMsg.comment");
        object = msg->mutable_comment();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransferTokenMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LbtcPbMsg.TransferTokenMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_opid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dstaddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dstaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.TransferTokenMsg.dstaddress");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 tokenid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_tokenid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.TransferTokenMsg.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LbtcPbMsg.TransferTokenMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LbtcPbMsg.TransferTokenMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransferTokenMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LbtcPbMsg.TransferTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opid(), output);
  }

  // required string dstaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.TransferTokenMsg.dstaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dstaddress(), output);
  }

  // required uint32 tokenid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tokenid(), output);
  }

  // required uint64 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->amount(), output);
  }

  // optional string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.TransferTokenMsg.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LbtcPbMsg.TransferTokenMsg)
}

::google::protobuf::uint8* TransferTokenMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LbtcPbMsg.TransferTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opid(), target);
  }

  // required string dstaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.TransferTokenMsg.dstaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dstaddress(), target);
  }

  // required uint32 tokenid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tokenid(), target);
  }

  // required uint64 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->amount(), target);
  }

  // optional string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.TransferTokenMsg.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->comment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LbtcPbMsg.TransferTokenMsg)
  return target;
}

size_t TransferTokenMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LbtcPbMsg.TransferTokenMsg)
  size_t total_size = 0;

  if (has_dstaddress()) {
    // required string dstaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dstaddress());
  }

  if (has_opid()) {
    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());
  }

  if (has_tokenid()) {
    // required uint32 tokenid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tokenid());
  }

  if (has_amount()) {
    // required uint64 amount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  return total_size;
}
size_t TransferTokenMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LbtcPbMsg.TransferTokenMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001d) ^ 0x0000001d) == 0) {  // All required fields are present.
    // required string dstaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dstaddress());

    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());

    // required uint32 tokenid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tokenid());

    // required uint64 amount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string comment = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferTokenMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LbtcPbMsg.TransferTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferTokenMsg* source =
      ::google::protobuf::DynamicCastToGenerated<TransferTokenMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LbtcPbMsg.TransferTokenMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LbtcPbMsg.TransferTokenMsg)
    MergeFrom(*source);
  }
}

void TransferTokenMsg::MergeFrom(const TransferTokenMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LbtcPbMsg.TransferTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      dstaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstaddress_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      opid_ = from.opid_;
    }
    if (cached_has_bits & 0x00000008u) {
      tokenid_ = from.tokenid_;
    }
    if (cached_has_bits & 0x00000010u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransferTokenMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LbtcPbMsg.TransferTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferTokenMsg::CopyFrom(const TransferTokenMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LbtcPbMsg.TransferTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferTokenMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;
  return true;
}

void TransferTokenMsg::Swap(TransferTokenMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferTokenMsg::InternalSwap(TransferTokenMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  dstaddress_.Swap(&other->dstaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(opid_, other->opid_);
  swap(tokenid_, other->tokenid_);
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata TransferTokenMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lbtc_2eproto);
  return ::file_level_metadata_lbtc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LockTokenMsg::InitAsDefaultInstance() {
}
class LockTokenMsg::HasBitSetters {
 public:
  static void set_has_opid(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_dstaddress(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tokenid(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_amount(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_comment(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_expiryheight(LockTokenMsg* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockTokenMsg::kOpidFieldNumber;
const int LockTokenMsg::kDstaddressFieldNumber;
const int LockTokenMsg::kTokenidFieldNumber;
const int LockTokenMsg::kAmountFieldNumber;
const int LockTokenMsg::kCommentFieldNumber;
const int LockTokenMsg::kExpiryheightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockTokenMsg::LockTokenMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LbtcPbMsg.LockTokenMsg)
}
LockTokenMsg::LockTokenMsg(const LockTokenMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dstaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dstaddress()) {
    dstaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstaddress_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&opid_, &from.opid_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiryheight_) -
    reinterpret_cast<char*>(&opid_)) + sizeof(expiryheight_));
  // @@protoc_insertion_point(copy_constructor:LbtcPbMsg.LockTokenMsg)
}

void LockTokenMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LockTokenMsg_lbtc_2eproto.base);
  dstaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiryheight_) -
      reinterpret_cast<char*>(&opid_)) + sizeof(expiryheight_));
}

LockTokenMsg::~LockTokenMsg() {
  // @@protoc_insertion_point(destructor:LbtcPbMsg.LockTokenMsg)
  SharedDtor();
}

void LockTokenMsg::SharedDtor() {
  dstaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LockTokenMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LockTokenMsg& LockTokenMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LockTokenMsg_lbtc_2eproto.base);
  return *internal_default_instance();
}


void LockTokenMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:LbtcPbMsg.LockTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      dstaddress_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&opid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiryheight_) -
        reinterpret_cast<char*>(&opid_)) + sizeof(expiryheight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LockTokenMsg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LockTokenMsg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_opid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string dstaddress = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.LockTokenMsg.dstaddress");
        object = msg->mutable_dstaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 tokenid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_tokenid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint64 amount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string comment = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.LockTokenMsg.comment");
        object = msg->mutable_comment();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint64 expiryheight = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_expiryheight(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LockTokenMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LbtcPbMsg.LockTokenMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_opid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dstaddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dstaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.LockTokenMsg.dstaddress");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 tokenid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_tokenid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.LockTokenMsg.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 expiryheight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_expiryheight(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiryheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LbtcPbMsg.LockTokenMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LbtcPbMsg.LockTokenMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LockTokenMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LbtcPbMsg.LockTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opid(), output);
  }

  // required string dstaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.LockTokenMsg.dstaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dstaddress(), output);
  }

  // required uint32 tokenid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tokenid(), output);
  }

  // required uint64 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->amount(), output);
  }

  // optional string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.LockTokenMsg.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comment(), output);
  }

  // required uint64 expiryheight = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->expiryheight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LbtcPbMsg.LockTokenMsg)
}

::google::protobuf::uint8* LockTokenMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LbtcPbMsg.LockTokenMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opid(), target);
  }

  // required string dstaddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dstaddress().data(), static_cast<int>(this->dstaddress().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.LockTokenMsg.dstaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dstaddress(), target);
  }

  // required uint32 tokenid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tokenid(), target);
  }

  // required uint64 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->amount(), target);
  }

  // optional string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.LockTokenMsg.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->comment(), target);
  }

  // required uint64 expiryheight = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->expiryheight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LbtcPbMsg.LockTokenMsg)
  return target;
}

size_t LockTokenMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LbtcPbMsg.LockTokenMsg)
  size_t total_size = 0;

  if (has_dstaddress()) {
    // required string dstaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dstaddress());
  }

  if (has_opid()) {
    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());
  }

  if (has_tokenid()) {
    // required uint32 tokenid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tokenid());
  }

  if (has_amount()) {
    // required uint64 amount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  if (has_expiryheight()) {
    // required uint64 expiryheight = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expiryheight());
  }

  return total_size;
}
size_t LockTokenMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LbtcPbMsg.LockTokenMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003d) ^ 0x0000003d) == 0) {  // All required fields are present.
    // required string dstaddress = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dstaddress());

    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());

    // required uint32 tokenid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tokenid());

    // required uint64 amount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());

    // required uint64 expiryheight = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expiryheight());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string comment = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockTokenMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LbtcPbMsg.LockTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LockTokenMsg* source =
      ::google::protobuf::DynamicCastToGenerated<LockTokenMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LbtcPbMsg.LockTokenMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LbtcPbMsg.LockTokenMsg)
    MergeFrom(*source);
  }
}

void LockTokenMsg::MergeFrom(const LockTokenMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LbtcPbMsg.LockTokenMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      dstaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstaddress_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      opid_ = from.opid_;
    }
    if (cached_has_bits & 0x00000008u) {
      tokenid_ = from.tokenid_;
    }
    if (cached_has_bits & 0x00000010u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000020u) {
      expiryheight_ = from.expiryheight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LockTokenMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LbtcPbMsg.LockTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockTokenMsg::CopyFrom(const LockTokenMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LbtcPbMsg.LockTokenMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockTokenMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003d) != 0x0000003d) return false;
  return true;
}

void LockTokenMsg::Swap(LockTokenMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockTokenMsg::InternalSwap(LockTokenMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  dstaddress_.Swap(&other->dstaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(opid_, other->opid_);
  swap(tokenid_, other->tokenid_);
  swap(amount_, other->amount_);
  swap(expiryheight_, other->expiryheight_);
}

::google::protobuf::Metadata LockTokenMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lbtc_2eproto);
  return ::file_level_metadata_lbtc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RegisteNameMsg::InitAsDefaultInstance() {
}
class RegisteNameMsg::HasBitSetters {
 public:
  static void set_has_opid(RegisteNameMsg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_name(RegisteNameMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisteNameMsg::kOpidFieldNumber;
const int RegisteNameMsg::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisteNameMsg::RegisteNameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LbtcPbMsg.RegisteNameMsg)
}
RegisteNameMsg::RegisteNameMsg(const RegisteNameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  opid_ = from.opid_;
  // @@protoc_insertion_point(copy_constructor:LbtcPbMsg.RegisteNameMsg)
}

void RegisteNameMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RegisteNameMsg_lbtc_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opid_ = 0u;
}

RegisteNameMsg::~RegisteNameMsg() {
  // @@protoc_insertion_point(destructor:LbtcPbMsg.RegisteNameMsg)
  SharedDtor();
}

void RegisteNameMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisteNameMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisteNameMsg& RegisteNameMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RegisteNameMsg_lbtc_2eproto.base);
  return *internal_default_instance();
}


void RegisteNameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:LbtcPbMsg.RegisteNameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  opid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RegisteNameMsg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RegisteNameMsg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_opid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("LbtcPbMsg.RegisteNameMsg.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegisteNameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LbtcPbMsg.RegisteNameMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 opid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_opid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LbtcPbMsg.RegisteNameMsg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LbtcPbMsg.RegisteNameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LbtcPbMsg.RegisteNameMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RegisteNameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LbtcPbMsg.RegisteNameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opid(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.RegisteNameMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LbtcPbMsg.RegisteNameMsg)
}

::google::protobuf::uint8* RegisteNameMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LbtcPbMsg.RegisteNameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 opid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opid(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LbtcPbMsg.RegisteNameMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LbtcPbMsg.RegisteNameMsg)
  return target;
}

size_t RegisteNameMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LbtcPbMsg.RegisteNameMsg)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_opid()) {
    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());
  }

  return total_size;
}
size_t RegisteNameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LbtcPbMsg.RegisteNameMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 opid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisteNameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LbtcPbMsg.RegisteNameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisteNameMsg* source =
      ::google::protobuf::DynamicCastToGenerated<RegisteNameMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LbtcPbMsg.RegisteNameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LbtcPbMsg.RegisteNameMsg)
    MergeFrom(*source);
  }
}

void RegisteNameMsg::MergeFrom(const RegisteNameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LbtcPbMsg.RegisteNameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      opid_ = from.opid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegisteNameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LbtcPbMsg.RegisteNameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisteNameMsg::CopyFrom(const RegisteNameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LbtcPbMsg.RegisteNameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisteNameMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RegisteNameMsg::Swap(RegisteNameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisteNameMsg::InternalSwap(RegisteNameMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(opid_, other->opid_);
}

::google::protobuf::Metadata RegisteNameMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lbtc_2eproto);
  return ::file_level_metadata_lbtc_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LbtcPbMsg
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::LbtcPbMsg::Msg* Arena::CreateMaybeMessage< ::LbtcPbMsg::Msg >(Arena* arena) {
  return Arena::CreateInternal< ::LbtcPbMsg::Msg >(arena);
}
template<> PROTOBUF_NOINLINE ::LbtcPbMsg::CreateTokenMsg* Arena::CreateMaybeMessage< ::LbtcPbMsg::CreateTokenMsg >(Arena* arena) {
  return Arena::CreateInternal< ::LbtcPbMsg::CreateTokenMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::LbtcPbMsg::TransferTokenMsg* Arena::CreateMaybeMessage< ::LbtcPbMsg::TransferTokenMsg >(Arena* arena) {
  return Arena::CreateInternal< ::LbtcPbMsg::TransferTokenMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::LbtcPbMsg::LockTokenMsg* Arena::CreateMaybeMessage< ::LbtcPbMsg::LockTokenMsg >(Arena* arena) {
  return Arena::CreateInternal< ::LbtcPbMsg::LockTokenMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::LbtcPbMsg::RegisteNameMsg* Arena::CreateMaybeMessage< ::LbtcPbMsg::RegisteNameMsg >(Arena* arena) {
  return Arena::CreateInternal< ::LbtcPbMsg::RegisteNameMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
